Sorting Algorithm - Selection Sort
Two Types of Sorting :
1.Sorted - Increasing (ascending)order
  eg: 1,5,7,9,12,15
2.Unsorted - Decreasing (descending)order
  eg: 14,12,7,9,5,1

# Purpose:
Create a solution to sort the given(6,8,2,7,1,5,3) set of numbers either in ascending or descending order


SELECTION SORTING:
*Defines -- choosing the right element in the right position (first, second position)
Problem:  [68,25,71,43,5]

Step1 : Fixing the first value as a "i"
Step2 : Comparing the Second value, if its lesser than first value
Step3 : By denoting the elements via index and put it as "i+1".
Step4 : Other than the first or current poisiton it can be named as "j"

Algorithm : checking and reacting wheather the index 0 element is suitable for that position. 
            If not the algorithm should find the smallest element in the same array.
            Then it should swap with that element. 

The process goes on until the algorithm couldn't find the smallest element than the current element.

Code Methodology:
  If the current element need to compare each and every value in the element then we should apply *Nested for loop*

Nested for loop :
for(position of 0th index to travel at the end eg: 68 need to travel till 5)
  {
    for(the loop rotation changes)
      {
      }
  }

Program:

int minidx = 0;
for (int i=0;i<=size-2;i++) # total element 5 - the swap position of 68 which is 3
  {  
    minidx = i
    for(int z=i+1;z<=size-1; z++) # the loop count is -1
    {
        if(arr[minidx]>arr[z])
        {
            minidx = z;
        }
   if(minidx != i)
  {
    swap(arr[minidx],arr[5])
    }
  }
